1. Intent对象的Activity启动标记说明：

FLAG_ACTIVITY_BROUGHT_TO_FRONT:
应用程序代码中通常不设置这个标记，而是由系统给单任务启动模式的Activity的设置。

FLAG_ACTIVITY_CLEAR_TASK:
如果给Intent对象添加了这个标记，那么在Activity被启动之前，会导致跟这个Activity关联的任何既存的任务都被清除。也就是说新的Activity会成为一个空任务的根，
而其他任何Activity都会被销毁。它紧跟FLAG_ACTIVITY_NEW_TASK联合使用。

FLAG_ACTIVITY_CLEAR_TOP:
如果给Intent对象设置这个标记，并且要启动的Activity在当前任务中已经运行了，那么不是创建一个这个Activity的新的实例，
而是把堆栈中这个Activity之上的所有其他Activity都关掉，然后把新的Intent对象发送给这个既存的Activity（这时它在堆栈的顶部）。

FLAG_ACTIVITY_CLEAR_WHEN_TASK_REST: (过时，不可用)
如果给Intent对象设置了这个标记，那么在这个任务被复位时，在任务的Activity堆栈中这个标记点之后的Activity都应该被清除。

FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS:
如果给Intent对象设置了这个标记，那么新的Activity不会被保留在最近启动的Activity的列表中。

FLAG_ACTIVITY_FORWARD_RESULT:
如果给Intent对象设置了这个标记，并且这个Intent对象被用于从一个既存的Activity中启动一个新的Activity，然后将这个既存Activity的回复目标转移到新的Activity。使用这种方式获取的新的Activity能够调用setResult(int)方法，把结果返回给原始的Activity。

FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY:
这个标记通常不由应用程序代码来设置，如果是从历史中启动这个Activity，系统就会设置这个标记。

FLAG_ACTIVITY_MULTIPLE_TASK:
除非实现自己的顶层应用程序启动器，否则不使用这个标记。

FLAG_ACTIVITY_NEW_TASK:
如果给Intent对象设置了这个标记，在历史堆栈之上，这个Activity将成为一个新任务的起点。

FLAG_ACTIVITY_NO_ANIMATION:
如果给Intent对象设置了这个标记，那么将会阻止系统在Activity间切换的动画变换。

FALG_ACTIVITY_NO_HISTORY:
如果给Intent对象设置了这个标记，那么新的Activity将不会被保留在历史堆栈中。

FLAG_ACTIVITY_NO_USER_ACTION:
如果给Intent对象设置了这个标记，在新启动到前台的Activity被挂起之前，它会阻止


普通的onUserLeaveHint()方法的回调。如果电话拨号或闹钟程序就要使用这个标记来启动Activity。

FLAG_ACTIVITY_PREVIOUS_IS_TOP:
如果给Intent对象设置了这个标记，并且这个Intent对象被用于从一个既存的Activity中启动一个新的Activity，这个Activity不能用于接受发送给顶层Activity的新的Intent对象，通常认为使用这个标记启动的Activity会被自己立即终止。

FLAG_ACTIVITY_REORDER_TO_FRONT:
如果给Intent对象设置了这个标记，那么将会导致任务历史堆栈中既存的Activity被带到前台。

FLAG_ACTIVITY_RESET_TASK_IF_NEEDED:
如果给Intent对象设置了这个标记，并且这个Activity在一个新任务中被启动，也可以在既存的任务堆栈中被带到顶层，那么它就会被作为任务的前门来启动。

FLAG_ACTIVITY_SINGLE_TOP:
如果给Intent对象设置了这个标记，如果要启动的Activity已经在历史堆栈的顶层运行，那么这个Activity就不会被启动。

FLAG_ACTIVITY_TASK_ON_HOME:
如果给Intent对象设置了这个标记，那么它会导致新启动的任务被放到当前的主Activity任务之上。